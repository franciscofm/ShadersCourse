Standard surface parameter type
The SurfaceOutput struct has the following properties:
	fixed3 Albedo;: This is the diffuse color of the material
	fixed3 Normal;: This is the tangent space normal, if written
	fixed3 Emission;: This is the color of the light emitted by the material (this
	property is declared as half3 in the Standard Shaders)
	fixed Alpha;: This is the transparency of the material
	half Specular;: This is the specular power from 0 to 1
	fixed Gloss;: This is the specular intensity

The SurfaceOutputStandard struct has the following properties:
	fixed3 Albedo;: This is the base color of the material (whether it’s diffuse or
	specular)
	fixed3 Normal;
	half3 Emission;: This property is declared as half3, while it was defined as fixed3
	in SurfaceOutput
	fixed Alpha;
	half Occlusion;: This is the occlusion (default 1)
	half Smoothness;: This is the smoothness (0 = rough, 1 = smooth)
	half Metallic;: 0 = non-metal, 1= metal
The SurfaceOutputStandardSpecular struct has the following properties:
	fixed3 Albedo;.
	fixed3 Normal;.
	half3 Emission;.
	fixed Alpha;.
	half Occlusion;.
	half Smoothness;.
	fixed3 Specular;: This is the specular color. This is very different from the
	Specular property in SurfaceOutput as it allows specifying a color rather than a
single value.

Surface Input struct:
	float3 viewDir - contains view direction, for computing Parallax effects, rim lighting etc.
	float4 with COLOR semantic - contains interpolated per-vertex color.
	float4 screenPos - contains screen space position for reflection or screenspace effects. Note that this is not suitable for GrabPass; you need to compute custom UV yourself using ComputeGrabScreenPos function.
	float3 worldPos - contains world space position.
	float3 worldRefl - contains world reflection vector if surface shader does not write to o.Normal. See Reflect-Diffuse shader for example.
	float3 worldNormal - contains world normal vector if surface shader does not write to o.Normal.
	float3 worldRefl; INTERNAL_DATA - contains world reflection vector if surface shader writes to o.Normal. 
		To get the reflection vector based on per-pixel normal map, use WorldReflectionVector (IN, o.Normal). See Reflect-Bumped shader for example.
	float3 worldNormal; INTERNAL_DATA - contains world normal vector if surface shader writes to o.Normal. 
		To get the normal vector based on per-pixel normal map, use WorldNormalVector (IN, o.Normal).